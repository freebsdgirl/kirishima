services:
  api:
    build:
      context: ./services/api
      args:
        SERVICE_PORT: ${API_PORT}
    environment:
      - SERVICE_PORT=${API_PORT}
      - SERVICE_NAME=api
      - TZ=America/Los_Angeles
    depends_on:
      - consul
      - graylog
      - brain
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./services/api/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net

  brain:
    build:
      context: ./services/brain
      args:
        SERVICE_PORT: ${BRAIN_PORT}
    environment:
      - SERVICE_PORT=${BRAIN_PORT}
      - SERVICE_NAME=brain
      - TZ=America/Los_Angeles
    depends_on:
      - consul
      - graylog
      - chromadb
    ports:
      - "${BRAIN_PORT}:${BRAIN_PORT}"
    volumes:
      - ./services/brain/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BRAIN_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  chromadb:
    build:
      context: ./services/chromadb
      args:
        SERVICE_PORT: ${CHROMADB_PORT}
    environment:
      - SERVICE_PORT=${CHROMADB_PORT}
      - SERVICE_NAME=chromadb
      - TZ=America/Los_Angeles
    depends_on:
      - consul
      - graylog
    ports:
      - "${CHROMADB_PORT}:${CHROMADB_PORT}"
    volumes:
      - ./services/chromadb/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${CHROMADB_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net

  contacts:
    build:
      context: ./services/contacts
      args:
        SERVICE_PORT: ${CONTACTS_PORT}
    environment:
      - SERVICE_PORT=${CONTACTS_PORT}
      - SERVICE_NAME=contacts
      - TZ=America/Los_Angeles
    depends_on:
      - consul
      - graylog
    ports:
      - "${CONTACTS_PORT}:${CONTACTS_PORT}"
    volumes:
      - ./services/contacts/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${CONTACTS_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net

  discord:
    build:
      context: ./services/discord
      args:
        SERVICE_PORT: ${DISCORD_PORT}
    environment:
      - SERVICE_PORT=${DISCORD_PORT}
      - SERVICE_NAME=discord
      - TZ=America/Los_Angeles
      - DISCORD_TOKEN=${DISCORD_TOKEN}
    depends_on:
      - consul
      - graylog
    ports:
      - "${DISCORD_PORT}:${DISCORD_PORT}"
    volumes:
      - ./services/discord/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${DISCORD_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net

  imessage:
    build:
      context: ./services/imessage
      args:
        SERVICE_PORT: ${IMESSAGE_PORT}
    environment:
      - SERVICE_PORT=${IMESSAGE_PORT}
      - SERVICE_NAME=imessage
      - BLUEBUBBLES_HOST=${BLUEBUBBLES_HOST}
      - BLUEBUBBLES_PORT=${BLUEBUBBLES_PORT}
      - BLUEBUBBLES_PASSWORD=${BLUEBUBBLES_PASSWORD}
      - BRAIN_HOST=brain
      - BRAIN_PORT=${BRAIN_PORT}
      - TZ=America/Los_Angeles
    depends_on:
      - consul
      - graylog
      - brain
    ports:
      - "${IMESSAGE_PORT}:${IMESSAGE_PORT}"
    volumes:
      - ./services/imessage/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${IMESSAGE_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net

  ledger:
    build:
      context: ./services/ledger
      args:
        SERVICE_PORT: ${LEDGER_PORT}
    environment:
      - SERVICE_PORT=${LEDGER_PORT}
      - SERVICE_NAME=ledger
      - TZ=America/Los_Angeles
    depends_on:
      - consul
      - graylog
    ports:
      - "${LEDGER_PORT}:${LEDGER_PORT}"
    volumes:
      - ./services/ledger/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${LEDGER_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net

  proxy:
    build:
      context: ./services/proxy
      args:
        SERVICE_PORT: ${PROXY_PORT}
    environment:
      - SERVICE_PORT=${PROXY_PORT}
      - SERVICE_NAME=proxy
      - LLM_MODEL_NAME=${LLM_MODEL_NAME}
      - OLLAMA_SERVER_HOST=${OLLAMA_SERVER_HOST}
      - OLLAMA_SERVER_PORT=${OLLAMA_SERVER_PORT}
      - TZ=America/Los_Angeles
    depends_on:
      - consul
      - graylog
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${PROXY_PORT}:${PROXY_PORT}"
    volumes:
      - ./services/proxy/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PROXY_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net

  scheduler:
    build:
      context: ./services/scheduler
      args:
        SERVICE_PORT: ${SCHEDULER_PORT}
    environment:
      - SERVICE_PORT=${SCHEDULER_PORT}
      - SERVICE_NAME=scheduler
      - TZ=America/Los_Angeles
    depends_on:
      - brain
      - consul
      - graylog
    ports:
      - "${SCHEDULER_PORT}:${SCHEDULER_PORT}"
    volumes:
      - ./services/scheduler/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SCHEDULER_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net
  
  smarthome:
    build:
      context: ./services/smarthome
      args:
        SERVICE_PORT: ${SMARTHOME_PORT}
    environment:
      - SERVICE_PORT=${SMARTHOME_PORT}
      - SERVICE_NAME=smarthome
      - TZ=America/Los_Angeles
    depends_on:
      - consul
      - graylog
    ports:
      - "${SMARTHOME_PORT}:${SMARTHOME_PORT}"
    volumes:
      - ./services/smarthome/app:/app/app
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SMARTHOME_PORT}/ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: gelf
      options:
        gelf-address: "tcp://localhost:12201"
    networks:
      - shared-net

  consul:
    image: hashicorp/consul
    command: agent -server -bootstrap -ui -client=0.0.0.0
    environment:
      - TZ=America/Los_Angeles
    ports:
      - "8500:8500"  # for accessing the Consul UI/API
    volumes:
      - consul_data:/consul/data
    networks:
      - shared-net


##### Graylog

  mongodb:
    image: "mongo:6.0"  
    restart: "on-failure"
    networks:
      - graylog
    volumes:
      - "mongodb_data:/data/db"
      - "mongodb_config:/data/configdb"  

  datanode:
    image: "${DATANODE_IMAGE:-graylog/graylog-datanode:6.1}"
    hostname: "datanode"
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: "/var/lib/graylog-datanode/node-id"
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_DATANODE_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}"
      GRAYLOG_DATANODE_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "8999:8999/tcp"   # DataNode API
      - "9200:9200/tcp"
      - "9300:9300/tcp"
    networks:
      - graylog
    volumes:
      - "graylog-datanode:/var/lib/graylog-datanode"
    restart: "on-failure"

  # Graylog: https://hub.docker.com/r/graylog/graylog-enterprise
  graylog:
    hostname: "server"
    image: "${GRAYLOG_IMAGE:-graylog/graylog:6.1}"
    depends_on:
      mongodb:
        condition: "service_started"
      datanode:
        condition: "service_started"
    entrypoint: "/usr/bin/tini --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/data/node-id"
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2:?Please configure GRAYLOG_ROOT_PASSWORD_SHA2 in the .env file}"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
    - "5044:5044/tcp"   # Beats
    - "5140:5140/udp"   # Syslog
    - "5140:5140/tcp"   # Syslog
    - "5555:5555/tcp"   # RAW TCP
    - "5555:5555/udp"   # RAW UDP
    - "9000:9000/tcp"   # Server API
    - "12201:12201/tcp" # GELF TCP
    - "12201:12201/udp" # GELF UDP
    - "13301:13301/tcp" # Forwarder data
    - "13302:13302/tcp" # Forwarder config
    networks:
      - shared-net
      - graylog
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
    restart: "on-failure"


#### ollama and openwebui

  ollama:
    volumes:
      - ./services/ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    image: docker.io/ollama/ollama:latest
    ports:
      - 11434:11434
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - TZ=America/Los_Angeles
    networks:
      - ollama-docker
      - shared-net
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  ollama-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: ollama-webui
    volumes:
      - ./services/ollama-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - 8080:8080
    environment: # https://docs.openwebui.com/getting-started/env-configuration#default_models
      - OLLAMA_BASE_URLS=http://host.docker.internal:11434 #comma separated ollama hosts
      - ENV=dev
      - WEBUI_AUTH=False
      - WEBUI_NAME=kirishima
      - WEBUI_URL=http://0.0.0.0:8080
      - WEBUI_SECRET_KEY=t0p-s3cr3t
      - TZ=America/Los_Angeles
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - ollama-docker
      - shared-net


networks:
  shared-net:
    external: true
  graylog:
    driver: bridge
  ollama-docker:
    external: false

volumes:
  mongodb_data:
  mongodb_config:
  graylog-datanode:
  graylog_data:
  consul_data:
