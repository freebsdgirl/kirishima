{
  "memory": {
    "description": "Comprehensive memory management - search, create, update, delete, list memories",
    "depends_on": [],
    "parameters": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": ["search", "create", "update", "delete", "list", "get"],
          "description": "The action to perform: search, create, update, delete, list, or get"
        },
        "keywords": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Keywords to search for (search action)"
        },
        "category": {
          "type": "string",
          "description": "Category filter for search or category for new memory"
        },
        "topic_id": {
          "type": "string",
          "description": "Topic ID filter for search or topic assignment"
        },
        "memory_id": {
          "type": "string",
          "description": "Memory ID for get, update, or delete actions"
        },
        "memory": {
          "type": "string",
          "description": "Memory text content for create or update actions"
        },
        "min_keywords": {
          "type": "integer",
          "description": "Minimum matching keywords for search (default: 2)",
          "default": 2
        },
        "created_after": {
          "type": "string",
          "description": "ISO timestamp - return memories created after this time"
        },
        "created_before": {
          "type": "string",
          "description": "ISO timestamp - return memories created before this time"
        },
        "limit": {
          "type": "integer",
          "description": "Maximum number of results for list/search (default: 10)",
          "default": 10
        },
        "offset": {
          "type": "integer",
          "description": "Offset for pagination in list action (default: 0)",
          "default": 0
        }
      },
      "required": ["action"]
    },
    "returns": {
      "type": "object",
      "properties": {
        "status": {"type": "string"},
        "memories": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Array of compact memory strings in format: id|timestamp|memory_text"
        },
        "count": {
          "type": "integer", 
          "description": "Number of memories returned"
        }
      }
    },
    "persistent": false
  },
  "github_issue": {
    "description": "Manage GitHub issues - create, view, comment, close, list issues and comments",
    "depends_on": [],
    "parameters": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string", 
          "enum": ["create", "list", "view", "comment", "close", "list_comments"],
          "description": "The action to perform on GitHub issues"
        },
        "issue_id": {"type": "string", "description": "Issue ID for view, comment, close, list_comments actions"},
        "title": {"type": "string", "description": "Issue title for create action"},
        "body": {"type": "string", "description": "Issue body content for create action"},
        "assignees": {"type": "array", "items": {"type": "string"}, "description": "List of usernames to assign"},
        "labels": {"type": "array", "items": {"type": "string"}, "description": "List of labels to apply"},
        "options": {"type": "object", "description": "Additional GitHub API options"},
        "comment_body": {"type": "string", "description": "Comment content for comment action"}
      },
      "required": ["action"]
    },
    "returns": {
      "type": "object",
      "properties": {
        "number": {"type": "integer"},
        "title": {"type": "string"},
        "html_url": {"type": "string"},
        "body": {"type": "string"}
      }
    },
    "persistent": true
  },
  "manage_prompt": {
    "description": "Manage agent's system prompts - add, delete, or list prompt entries (internal use only)",
    "depends_on": [],
    "parameters": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": ["add", "delete", "list"],
          "description": "Action to perform: add, delete, or list"
        },
        "prompt_id": {
          "type": "string",
          "description": "ID of the prompt to delete (required for delete action)"
        },
        "prompt_text": {
          "type": "string",
          "description": "Text content of the prompt (required for add action)"
        },
        "reasoning": {
          "type": "string",
          "description": "Reasoning for the prompt change (required for add action)"
        }
      },
      "required": ["action"]
    },
    "returns": {
      "type": "object",
      "properties": {
        "status": {"type": "string"},
        "action": {"type": "string"},
        "id": {"type": "string"},
        "prompts": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Array of compact prompt strings in format: id|prompt_text"
        }
      }
    },
    "persistent": true
  },
  "email": {
    "description": "Create email drafts via Gmail (creates drafts for safety, never sends directly)",
    "depends_on": [],
    "parameters": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": ["send"],
          "description": "The action to perform (only 'send' supported, creates draft for safety)"
        },
        "to": {
          "type": "string",
          "description": "Recipient email address"
        },
        "subject": {
          "type": "string",
          "description": "Email subject line"
        },
        "content": {
          "type": "string",
          "description": "Email body content"
        },
        "from_email": {
          "type": "string",
          "description": "Sender email address (optional)"
        },
        "cc": {
          "type": "string",
          "description": "CC recipient email address (optional)"
        }
      },
      "required": ["action", "to", "subject", "content"]
    },
    "returns": {
      "type": "object",
      "properties": {
        "status": {"type": "string"},
        "message": {"type": "string"}
      }
    },
    "persistent": true
  },
  "calendar": {
    "description": "Calendar operations - create, search, get upcoming, delete, and list events via Google Calendar",
    "depends_on": [],
    "parameters": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": ["create_event", "search_events", "get_upcoming", "delete_event", "list_events"],
          "description": "The action to perform: create_event, search_events, get_upcoming, delete_event, or list_events"
        },
        "summary": {
          "type": "string",
          "description": "Event title/summary (required for create_event)"
        },
        "start_datetime": {
          "type": "string",
          "description": "Event start time in ISO 8601 format (required for create_event)"
        },
        "end_datetime": {
          "type": "string",
          "description": "Event end time in ISO 8601 format (required for create_event)"
        },
        "description": {
          "type": "string",
          "description": "Event description (optional for create_event)"
        },
        "location": {
          "type": "string",
          "description": "Event location (optional for create_event)"
        },
        "attendees": {
          "type": "array",
          "items": {"type": "string"},
          "description": "List of attendee email addresses (optional for create_event)"
        },
        "send_notifications": {
          "type": "boolean",
          "description": "Whether to send notifications to attendees (optional, default: true)"
        },
        "transparency": {
          "type": "string",
          "description": "Event transparency - opaque or transparent (optional for create_event)"
        },
        "visibility": {
          "type": "string",
          "description": "Event visibility - default, public, private, or confidential (optional for create_event)"
        },
        "event_id": {
          "type": "string",
          "description": "Event ID (required for delete_event)"
        },
        "query": {
          "type": "string",
          "description": "Search query text (optional for search_events)"
        },
        "start_date": {
          "type": "string",
          "description": "Start date in YYYY-MM-DD format (optional for search_events, required for list_events)"
        },
        "end_date": {
          "type": "string",
          "description": "End date in YYYY-MM-DD format (optional for search_events, required for list_events)"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return (optional, default varies by action)",
          "default": 10
        },
        "days_ahead": {
          "type": "integer",
          "description": "Number of days ahead to look for upcoming events (optional for get_upcoming, default: 7)",
          "default": 7
        }
      },
      "required": ["action"]
    },
    "returns": {
      "type": "object",
      "properties": {
        "status": {"type": "string"},
        "message": {"type": "string"},
        "count": {"type": "integer"},
        "event_id": {"type": "string"}
      }
    },
    "persistent": true
  }
}
