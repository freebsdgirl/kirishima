[
  {
    "type": "function",
    "function": {
      "name": "manage_prompt",
      "description": "Manage the agent's prompt (add or delete a line, or list all lines and ids).",
      "parameters": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to perform: 'add', 'delete', or 'list'.",
            "enum": ["add", "delete", "list"]
          },
          "prompt_id": {
            "type": "string",
            "description": "The ID of the prompt to delete. Required for 'delete'. First, list prompts to get the ID."
          },
          "prompt_text": {
            "type": "string",
            "description": "The new line of the prompt to add. Required for 'add'."
          },
          "reasoning": {
            "type": "string",
            "description": "The reasoning for the prompt. Required for 'add'."
          }
        },
        "required": ["action"]
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "memory_add",
      "description": "Add a new memory.",
      "parameters": {
        "type": "object",
        "properties": {
          "memory": {
            "type": "string",
            "description": "The memory to save.",
            "example": "Slam Jackson is Randi's dog. He is a golden doodle."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags/keywords associated with the memory.",
            "example": ["Slam Jackson", "dog", "pet", "golden doodle"]
          },
          "topic": {
            "type": "string",
            "description": "The topic of the memory, used for categorization. Must match one of the predefined topics: Health, Career, Family, Personal, Technical Projects, Social, Finance, Self-care, Environment, Hobbies, Admin, Philosophy",
            "example": "Family"
          },
          "priority": {
            "type": "number",
            "description": "Priority level of the memory, where 0.0 is low priority and 1.0 is high priority.",
            "minimum": 0.0,
            "maximum": 1.0,
            "example": 0.5
          }
        },
        "required": ["message","tags","topic","priority"]
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "memory_delete",
      "description": "Delete a memory and its tags by memory ID.",
      "parameters": {
        "type": "object",
        "properties": {
          "memory_id": {
            "type": "string",
            "description": "The ID of the memory to delete."
          }
        },
        "required": ["memory_id"]
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "memory_list",
      "description": "List all memories along with their keywords.",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": []
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "memory_search",
      "description": "Search for memories by a list of keywords (exact, case-insensitive match) or topics. Returns memories ordered by number of matches, priority, and recency.",
      "parameters": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {"type": "string"},
            "description": "List of keywords to search for."
          },
          "topic": {
            "type": "string",
            "description": "The topic to filter memories by. Must match one of the predefined topics: Health, Career, Family, Personal, Technical Projects, Social, Finance, Self-care, Environment, Hobbies, Admin, Philosophy"
          }
        },
        "required": []
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "tts",
      "description": "Toggle TTS/STT availability or retrieve TTS/STT status.",
      "parameters": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to perform: 'start', 'stop', or 'status'.",
            "enum": ["start", "stop", "status"]
          }
        },
        "required": ["action"]
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "update_divoom",
      "description": "Update the Divoom Max to display an emoji.",
      "parameters": {
        "type": "object",
        "properties": {
          "emoji": {
            "type": "string",
            "description": "The emoji to display on the Divoom Max. Use a valid emoji Unicode character."
          }
        },
        "required": ["emoji"]
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "github_issue",
      "description": "Create, close, list, view, comment, or list comments on a GitHub issue.",
      "parameters": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The action to perform on the GitHub issue.",
            "enum": ["create", "close", "list", "view", "comment", "list_comments"]
          },
          "issue_id": {
            "type": "string",
            "description": "The ID of the issue to close, view, or list comments. Required for 'close', 'view', and 'list_comments'."
          },
          "title": {
            "type": "string",
            "description": "The title of the issue. Required for 'create'."
          },
          "body": {
            "type": "string",
            "description": "The body content of the issue. Required for 'create'."
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of usernames to assign to the issue. Optional for 'create' and 'list'."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of labels to apply to the issue. Optional for 'create' and 'list'."
          },
          "options": {
            "type": "object",
            "description": "Additional GitHub API options as a dict."
          },
          "comment_body": {
            "type": "string",
            "description": "The body of the comment to add to the issue. Required for 'comment'."
          }
        },
        "required": ["action"]
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "smarthome",
      "description": "Perform smarthome actions.",
      "parameters": {
        "type": "object",
        "properties": {
          "user_request": {
            "type": "string",
            "description": "The natural language request to perform (e.g., 'turn on the living room lights')."
          },
          "device": {
            "type": "string",
            "description": "The name of the device to control (e.g., 'living room lights')."
          }
        },
        "required": ["user_request"]
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "stickynotes",
      "description": "Perform sticky notes actions.",
      "parameters": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to perform: 'create', 'list', 'snooze', 'resolve'."
          },
          "text": {
            "type": "string",
            "description": "The text content of the sticky note, used for create."
          },
          "snooze": {
            "type": "string",
            "description": "The snooze period. Format is ISO 8601 duration."
          },
          "periodicity": {
            "type": "string",
            "description": "The periodicity of the sticky note, used for create. (e.g., R/P1D) Format is ISO 8601 duration."
          },
          "id": {
            "type": "string",
            "description": "The ID of the sticky note, used to snooze or resolve."
          },
          "date": {
            "type": "string",
            "description": "The date for the sticky note, used for create. Format is ISO 8601 date."
          }
        },
        "required": ["action"]
      }
    }
  }
]
